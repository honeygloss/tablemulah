{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\table-mulah\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  // Fetch list of tables\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/tables\").then(res => res.json()).then(tables => {\n      setTables(tables);\n      if (tables.length > 0) {\n        setSelectedTable(tables[0]);\n      }\n    });\n  }, []);\n\n  // Fetch data for selected table\n  useEffect(() => {\n    if (selectedTable) {\n      fetch(`http://localhost:5000/api/${selectedTable}`).then(res => res.json()).then(data => setData(data));\n    }\n  }, [selectedTable]);\n\n  // Get Excel-style column letters (A, B, C, ...)\n  const getColumnLetters = count => Array.from({\n    length: count\n  }, (_, i) => String.fromCharCode(65 + i));\n\n  // Remove 'id' column if it exists\n  const filterColumns = row => Object.keys(row).filter(col => col.toLowerCase() !== \"id\");\n  const filteredKeys = data.length > 0 ? filterColumns(data[0]) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Table Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 24\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedTable,\n        onChange: e => setSelectedTable(e.target.value),\n        children: tables.map(table => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: table,\n          children: table\n        }, table, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"numbering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), getColumnLetters(filteredKeys.length).map(letter => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"ab-header\",\n              children: letter\n            }, letter, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"numbering\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), filteredKeys.map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"numbering\",\n              children: idx + 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), filteredKeys.map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row[key]\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this))]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"q0hFXeXLC8TIKZ2pwZkRkC/UlJk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","tables","setTables","selectedTable","setSelectedTable","data","setData","fetch","then","res","json","length","getColumnLetters","count","Array","from","_","i","String","fromCharCode","filterColumns","row","Object","keys","filter","col","toLowerCase","filteredKeys","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","value","onChange","e","target","map","table","letter","key","idx","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/table-mulah/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  // Fetch list of tables\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/tables\")\n      .then((res) => res.json())\n      .then((tables) => {\n        setTables(tables);\n        if (tables.length > 0) {\n          setSelectedTable(tables[0]);\n        }\n      });\n  }, []);\n\n  // Fetch data for selected table\n  useEffect(() => {\n    if (selectedTable) {\n      fetch(`http://localhost:5000/api/${selectedTable}`)\n        .then((res) => res.json())\n        .then((data) => setData(data));\n    }\n  }, [selectedTable]);\n\n  // Get Excel-style column letters (A, B, C, ...)\n  const getColumnLetters = (count) =>\n    Array.from({ length: count }, (_, i) =>\n      String.fromCharCode(65 + i)\n    );\n\n  // Remove 'id' column if it exists\n  const filterColumns = (row) =>\n    Object.keys(row).filter((col) => col.toLowerCase() !== \"id\");\n\n  const filteredKeys = data.length > 0 ? filterColumns(data[0]) : [];\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic Table Output</h1>\n      <div style={{ marginBottom: 24 }}>\n        <select\n          value={selectedTable}\n          onChange={(e) => setSelectedTable(e.target.value)}\n        >\n          {tables.map((table) => (\n            <option key={table} value={table}>\n              {table}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            {/* Excel-like top row: blank cell + column letters */}\n            <tr>\n              <th className=\"numbering\"></th>\n              {getColumnLetters(filteredKeys.length).map((letter) => (\n                <th className=\"ab-header\" key={letter}>\n                  {letter}\n                </th>\n              ))}\n            </tr>\n\n            {/* Row 1: column names */}\n            <tr>\n              <th className=\"numbering\">1</th>\n              {filteredKeys.map((key) => (\n                <th key={key}>{key}</th>\n              ))}\n            </tr>\n          </thead>\n\n          <tbody>\n            {data.map((row, idx) => (\n              <tr key={idx}>\n                <td className=\"numbering\">{idx + 2}</td>\n                {filteredKeys.map((key) => (\n                  <td key={key}>{row[key]}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}